# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Answer {
  assigAuditor: String
  auditorNote: String
  hashtags: String
  id: Int!
  questionId: Float!
  questionTitle: String!
  questionnary: Questionnary
  stateLabels: String
  user: User
  userAnswer: String
  userEmail: String!
  userId: Float!
  verifStatus: String
}

"""Type of chart to use in the dashboard"""
enum Chart {
  bar
  pie
  table
  undefined
}

input CreateAnswerInput {
  assigAuditor: String
  auditorNote: String
  hashtags: String
  id: Int
  questionId: Float!
  questionTitle: String!
  stateLabels: String
  userAnswer: String
  userEmail: String!
  userId: Float!
  verifStatus: String
}

input CreateManyAnswersInput {
  createAnswersInput: [CreateAnswerInput!]!
}

input CreateManyQuestionnariesInput {
  questionnariesInput: [CreateQuestionnaryInput!]!
}

input CreateManyUsersInput {
  manyUsersInput: [CreateUserInput!]!
}

input CreateQuestionnaryInput {
  campaign: String
  chartType: Chart!
  choices: [String!]!
  questionId: Float!
  sectionName: String
  title: String!
}

input CreateUserInput {
  academicProgramme: [String!]
  country: String!
  userEmail: String!
  userId: Float!
  userLabels: String
  userName: String!
}

type Mutation {
  createAnswer(createAnswerInput: CreateAnswerInput!): Answer
  createAnswers(createManyAnswersInput: CreateManyAnswersInput!): [Answer!]!
  createQuestionnaries(createManyQuestionnariesInput: CreateManyQuestionnariesInput!): [Questionnary!]!
  createQuestionnary(createQuestionnaryInput: CreateQuestionnaryInput!): Questionnary!
  createUser(createUserInput: CreateUserInput!): User!
  createUsers(createManyUsersInput: CreateManyUsersInput!): [User!]!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Query {
  findAllAnswers: [Answer!]!
  findAllQuestionnaries: [Questionnary!]!
  findAllUsers: [User!]!
  findManyAnswers(ids: [Int!]!): [Answer!]!
  findManyQuestionnaries(questionIds: [Int!]!): [Questionnary!]!
  findManyUsers(userIds: [Int!]!): [User!]!
  findOneAnswer(id: Int!): Answer!
  findOneQuestionnary(questionId: Int!): Questionnary!
  findOneUser(userId: Int!): User!
}

type Questionnary {
  answers: [Answer!]!
  campaign: String!
  chartType: Chart!
  choices: [String!]!
  questionId: Float!
  sectionName: String!
  title: String!
}

input UpdateUserInput {
  academicProgramme: [String!]
  country: String
  userEmail: String
  userId: Int!
  userLabels: String
  userName: String
}

type User {
  academicProgramme: [String!]
  answers: [Answer!]!
  country: String!
  userEmail: String!
  userId: Float!
  userLabels: String
  userName: String!
}